---
- name: K8s | Install k8s repo
  vars:
    k8s_ver: v1.30
  tags:
    - kubectl
  block:
    - name: K8s | Add key for k8s repo
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/{{ k8s_ver }}/deb/Release.key
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: K8s | Add k8s repo
      ansible.builtin.apt_repository:
        repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ k8s_ver }}/deb/ /
        state: present
        filename: kubernetes

    - name: K8s | Install k8s apps
      ansible.builtin.apt:
        name:
          - kubectl
        state: latest
        update_cache: true

# https://github.com/cue-lang/cue
- name: K8s | Install CUE {{ cur_ver }}
  vars:
    cur_ver: 0.11.1
  ansible.builtin.unarchive:
    src: https://github.com/cue-lang/cue/releases/download/v{{ cur_ver }}/cue_v{{ cur_ver }}_linux_amd64.tar.gz
    dest: /usr/local/bin
    extra_opts:
      - cue  # extract just one file
    remote_src: true
    mode: 0755
  tags:
    - cue

# https://github.com/derailed/k9s/releases
- name: K8s | Install k9s {{ k9s_ver }}
  vars:
    k9s_ver: 0.32.7
    k9s_folder: "{{ base_user_home }}/.config/k9s"
  tags:
    - k9s
  block:
    - name: k9s | Install k9s
      ansible.builtin.unarchive:
        src: "https://github.com/derailed/k9s/releases/download/v{{ k9s_ver }}/k9s_Linux_amd64.tar.gz"
        dest: /usr/local/bin
        remote_src: true
        mode: 0755

    - name: k9s | Create folder {{ k9s_folder }}
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - "{{ k9s_folder }}"
        - "{{ k9s_folder }}/skins"

    # https://github.com/derailed/k9s/tree/master/skins
    - name: k9s | Gruvbox theme
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/derailed/k9s/master/skins/gruvbox-dark.yaml
        force: true
        dest: "{{ k9s_folder }}/skins/gruvbox-dark.yaml"
        mode: 0644

    - name: k9s | config
      ansible.builtin.copy:
        mode: 0644
        dest: "{{ k9s_folder }}/config.yaml"
        content: |
          k9s:
            liveViewAutoRefresh: true
            refreshRate: 2
            maxConnRetry: 5
            readOnly: false
            noExitOnCtrlC: false
            ui:
              enableMouse: false
              headless: true
              logoless: true
              crumbsless: false
              noIcons: false
              reactive: true
              skin: gruvbox-dark
            shellPod:
              image: contreg.ru/library/busybox:1.35.0
              namespace: default
              limits:
                cpu: 100m
                memory: 100Mi
            skipLatestRevCheck: false
            logger:
              tail: 100
              buffer: 5000
              sinceSeconds: -1
              textWrap: false
              showTime: false
            imageScans:
              enable: false
            thresholds:
              cpu:
                critical: 90
                warn: 70
              memory:
                critical: 90
                warn: 70
            screenDumpDir: /tmp/k9s-screens
            disablePodCounting: false

    - name: k9s | config
      ansible.builtin.copy:
        mode: 0644
        dest: "{{ k9s_folder }}/plugins.yaml"
        content: |
          plugins:
            # Leverage stern (https://github.com/wercker/stern) to output logs.
            stern:
              shortCut: Ctrl-L
              confirm: false
              description: "Logs <Stern>"
              scopes:
                - pods
              command: stern
              background: false
              args:
                - --tail
                - 50
                - $FILTER
                - -n
                - $NAMESPACE
                - --context
                - $CONTEXT
            watch-events:
              shortCut: Shift-E
              confirm: false
              description: Get Events
              scopes:
              - all
              command: sh
              background: false
              args:
              - -c
              - "watch -n 5 kubectl get events --context $CONTEXT --namespace $NAMESPACE --field-selector involvedObject.name=$NAME"
            blame:
              shortCut: b
              confirm: false
              description: "Blame"
              scopes:
                - all
              command: sh
              background: false
              args:
                - -c
                - "kubectl-blame $RESOURCE_NAME $NAME -n $NAMESPACE --context $CONTEXT | less"
            debug:
              shortCut: Shift-D
              description: Add debug container
              dangerous: true
              scopes:
                - containers
              command: bash
              background: false
              confirm: true
              args:
                - -c
                - "kubectl debug -it --context $CONTEXT -n=$NAMESPACE $POD --target=$NAME --image=nicolaka/netshoot:v0.12 --share-processes -- bash"
            remove_finalizers:
              shortCut: Ctrl-F
              confirm: true
              dangerous: true
              scopes:
                - all
              description: Removes finalizers
              command: kubectl
              background: true
              args:
                - patch
                - --context
                - $CONTEXT
                - --namespace
                - $NAMESPACE
                - $RESOURCE_NAME
                - $NAME
                - -p
                - '{"metadata":{"finalizers":null}}'
                - --type
                - merge


# https://github.com/stern/stern
- name: K8s | Install stern {{ stern_ver }}
  vars:
    stern_ver: 1.31.0
  ansible.builtin.unarchive:
    src: "https://github.com/stern/stern/releases/download/v{{ stern_ver }}/stern_{{ stern_ver }}_linux_amd64.tar.gz"
    dest: /usr/local/bin
    remote_src: true
    mode: 0755
  tags:
    - stern

- name: K8s | Install minkube
  ansible.builtin.get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    force: true
    dest: "/usr/local/bin/minikube"
    mode: 0755
  tags:
    - minikube

# https://github.com/pulumi/kubespy
- name: K8s | Install kubespy {{ kubespy_ver }}
  vars:
    kubespy_ver: v0.6.3
  ansible.builtin.unarchive:
    src: https://github.com/pulumi/kubespy/releases/download/{{ kubespy_ver }}/kubespy-{{ kubespy_ver }}-linux-amd64.tar.gz
    dest: /usr/local/bin
    extra_opts:
      - kubespy  # extract just one file
    remote_src: true
    mode: 0755
  tags:
    - kubespy

# https://github.com/kubernetes-sigs/kustomize
- name: K8s | Install kustomize {{ kustomize_ver }}
  vars:
    kustomize_ver: 5.5.0
  ansible.builtin.unarchive:
    src: https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv{{ kustomize_ver }}/kustomize_v{{ kustomize_ver }}_linux_amd64.tar.gz
    dest: /usr/local/bin
    extra_opts:
      - kustomize  # extract just one file
    remote_src: true
    mode: 0755
  tags:
    - kustomize

# https://github.com/helm/helm/releases
- name: K8s | Install helm {{ helm_ver }}
  vars:
    helm_ver: v3.16.4
  ansible.builtin.unarchive:
    src: "https://get.helm.sh/helm-{{ helm_ver }}-linux-amd64.tar.gz"
    dest: /usr/local/bin
    remote_src: true
    extra_opts:
      - --strip-components=1
      - linux-amd64/helm
  tags:
    - helm

# https://github.com/kubernetes-sigs/krew
- name: K8s | Krew
  vars:
    krew_ver: v0.4.4
  tags:
    - krew
  block:
    - name: k8s | Install krew
      ansible.builtin.unarchive:
        src: https://github.com/kubernetes-sigs/krew/releases/download/{{ krew_ver }}/krew-linux_amd64.tar.gz
        dest: /tmp
        extra_opts:
          # - --strip=1
          - --wildcards
          - "*/krew-linux_amd64"
        remote_src: true

    - name: k8s | Rename krew
      ansible.builtin.copy:
        remote_src: true
        src: /tmp/krew-linux_amd64
        dest: /usr/local/bin/krew
        mode: 0755

# # https://github.com/istio/istio/releases/
# - name: K8s | Install istioctl {{ istioctl_ver }}
#   vars:
#     istioctl_ver: 1.22.1
#   ansible.builtin.unarchive:
#     src: "https://github.com/istio/istio/releases/download/{{ istioctl_ver }}/istioctl-{{ istioctl_ver }}-linux-amd64.tar.gz"
#     dest: /usr/local/bin
#     remote_src: true
#     mode: 0755
#   tags:
#     - istioctl

# https://github.com/stackrox/kube-linter
- name: K8s | Install kube-linter
  vars:
    kube_linter_ver: 0.7.1
  ansible.builtin.get_url:
    url: "https://github.com/stackrox/kube-linter/releases/download/v{{ kube_linter_ver }}/kube-linter-linux"
    force: true
    dest: "/usr/local/bin/kube-linter"
    mode: 0755
  tags:
    - kube-linter

# https://kind.sigs.k8s.io/
- name: K8s | Install kind
  vars:
    kind_ver: 0.26.0
  ansible.builtin.get_url:
    url: "https://kind.sigs.k8s.io/dl/v{{ kind_ver }}/kind-linux-amd64"
    force: true
    dest: "/usr/local/bin/kind"
    mode: 0755
  tags:
    - kind

# https://github.com/kubeshark/kubeshark
- name: K8s | Install kubeshark
  vars:
    kubeshark_ver: 52.3.94
  ansible.builtin.get_url:
    url: "https://github.com/kubeshark/kubeshark/releases/download/v{{ kubeshark_ver }}/kubeshark_linux_amd64"
    force: true
    dest: "/usr/local/bin/kubeshark"
    mode: 0755
  tags:
    - kubeshark

# https://github.com/cilium/cilium-cli
- name: K8s | Install cilium-cli {{ cilium_cli_ver }}
  vars:
    cilium_cli_ver: v0.16.22
  ansible.builtin.unarchive:
    src: https://github.com/cilium/cilium-cli/releases/download/{{ cilium_cli_ver }}/cilium-linux-amd64.tar.gz
    dest: /usr/local/bin
    extra_opts:
      - cilium
    remote_src: true
  tags:
    - cilium
    - cilium-cli

# https://github.com/kubecolor/kubecolor
- name: K8s | Install kubecolor {{ kubecolor_ver }}
  vars:
    kubecolor_ver: 0.4.0
  ansible.builtin.unarchive:
    src: https://github.com/kubecolor/kubecolor/releases/download/v{{ kubecolor_ver }}/kubecolor_{{ kubecolor_ver }}_linux_amd64.tar.gz
    dest: /usr/local/bin
    extra_opts:
      - kubecolor
    remote_src: true
  tags:
    - kubecolor


# https://github.com/deckhouse/deckhouse-cli
- name: K8s | Install d8 cli {{ d8cli_ver }}
  vars:
    d8cli_ver: 0.9.0
  ansible.builtin.unarchive:
    src: https://github.com/deckhouse/deckhouse-cli/releases/download/v{{ d8cli_ver }}/d8-v{{ d8cli_ver }}-linux-amd64.tar.gz
    #dest: /home/user/git/fl64/ubuntu-ansible-bootstrap
    dest: /usr/local/bin
    extra_opts:
      - --strip=2
      - --wildcards
      - "*/d8"
    remote_src: true
  tags:
    - d8cli
    - d8

# https://github.com/siderolabs/talos
- name: K8s | Install talosctl
  vars:
    talosctl_ver: 1.9.1
  ansible.builtin.get_url:
    url: "https://github.com/siderolabs/talos/releases/download/v{{ talosctl_ver }}/talosctl-linux-amd64"
    force: true
    dest: "/usr/local/bin/talosctl"
    mode: 0755
  tags:
    - talosctl
    - talos


# https://github.com/kubevirt/kubevirt
- name: K8s | Install virtctl
  vars:
    virtctl_ver: 1.4.0
  ansible.builtin.get_url:
    url: "https://github.com/kubevirt/kubevirt/releases/download/v{{ virtctl_ver }}/virtctl-v{{ virtctl_ver }}-linux-amd64"
    force: true
    dest: "/usr/local/bin/virtctl"
    mode: 0755
  tags:
    - virtctl
    - kubevirt

# https://github.com/Skarlso/crd-to-sample-yaml
- name: K8s | Install cty
  vars:
    cty_ver: 1.1.2
  ansible.builtin.unarchive:
    src: https://github.com/Skarlso/crd-to-sample-yaml/releases/download/v1.0.2/cty_linux_amd64.tar.gz
    remote_src: true
    dest: /usr/local/bin
    extra_opts:
      - cty
  tags:
    - cty
